最近在重新学习Android系统下APP应用设计。自己有一个很大的缺点，就是在学习上功夫不够，比较浮躁，不少东西都是浅甞辄止，c/c++,java,python,php,javasrcipt，....。最后的结果就是什么都知道一些，但是啥也不深入。但愿自己可以尽快改掉这个坏毛病。闲言少敘，先来看看最近学了些什么吧。

这里有一个槽点。以前学习C、python时不用IDE也能玩得不亦乐乎，但学习Android时离开IDE就是寸步难行。为了和官方保持一致，现在使用的IDE是Android Studio2.3。光是安装这个就花了好几天。中间遇到了一堆问题，在网上查了很多资料，最后总算配置成功两套不同的编程环境，一个是在32位Windows7（台式机）下，一个是64位Ubuntu16.04（笔记本）下。写这些文字的时候用的是后面这个系统。这里有两点体会：第一，要找一个适合自己的教程，不是所有的教程都适合你的实际情况；第二，操作系统与Android Studio的版本要搞清楚，特别是要分清楚32位、64位。因为我的笔记本比较旧，内存只有2G,按照官方建议安装的是32位Unbuntu16.04，结果在上面安装最新版的Android Studio后出现很多奇奇怪怪的问题。最后狠心不顾及内存大小，安装了64位Unbuntu16.04，各种问题居然随之烟消云散。官方推荐Android Studio最低要3G内存，最好能达到8G，这对我的这台老笔记来说有点奢侈（估计本本中都没有这么多卡槽）。虽然Build的过程比较慢，偶尔也有卡顿，但是也可以通过。能向走总比站在原地不能动要好得多。

Android编程与自己以前的学习经历很不一样。学习C时就是根据算法写一段代码，因为是都是小程序，多数情况就一个文件，然后编译、调试，等等。但是Android编程与此有大不同。主要原因在于Android系统是运行在Linux系统之上的一个JAVA虚拟机，Android应用编程需要使用Java语言，其背后的思维是面向对象；而以前写C代码的时候就是面向过程的。也就是说，在写Android应用的时候，需要换一种思维方式，不要上来就找main()入口在哪里。当然了程序入口还是有的，只不过没有C程序中那些明显。

一个最简单的Android应用，也至少需要关注三个环节，我把它称为“里、中、外”。

“里”，就是那从Acitivty继承的class文件，应用对动作有什么反应都是在此进行解释的。“外”，是指我们看到的界面，Android应用运行后我们所看到的每一个主界面都对应一个layout的XML文件，这个文件中对界面作出布局，也称为布局文件。“中”，为了协调class文件与布局文件，还有一个固定名称的文件:AndroidMenifest.xml对Android应用作出总体部署（这里指出什么地方入口）。

换种说法，一个Android应用看起来是什么样的，是由Layout的XML文件定义的，这是布局文件；一个Android应用动起来是什么样的，即对各种操作的响应是由class文件定义；这一切都是有一个脚本：AndroidMenifest.xml。

再打个比方，如果把Android应用看作是一个舞台演出，那么手机、Android系统构成了舞台，Layout.xml是舞美设计，class文件是动作设计，AndroidMenifest.xml是演出总体方案。

这三者最终被构建、打包成一个APK应用，安装到Android系统中运行，当然是在没有出错的情况下。


