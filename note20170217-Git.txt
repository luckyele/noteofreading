查看分支：gitbranch
创建分支：gitbranch<name>
切换分支：gitcheckout<name>
创建+切换分支：gitcheckout-b<name>
合并某分支到当前分支：gitmerge<name>
删除分支：gitbranch-d<name>
多人协作的工作模式通常是这样：
首先，可以试图用gitpushoriginbranch-name推送自己的修改；
如果推送失败，则因为远程分支比你的本地更新，需要先用gitpull试图合并；
如果合并有冲突，则解决冲突，并在本地提交；
没有冲突或者解决掉冲突后，再用gitpushoriginbranch-name推送就能成功！
如果gitpull提示“notrackinginformation”，则说明本地分支和远程分支的链接关系没有创建，用命令gitbranch--set-upstreambranch-nameorigin/branch-name。
这就是多人协作的工作模式，一旦熟悉了，就非常简单。
查看远程库信息，使用gitremote-v；
本地新建的分支如果不推送到远程，对其他人就是不可见的；
从本地推送分支，使用gitpushoriginbranch-name，如果推送失败，先用gitpull抓取远程的新提交；
在本地创建和远程分支对应的分支，使用gitcheckout-bbranch-nameorigin/branch-name，本地和远程分支的名称最好一致；
建立本地分支和远程分支的关联，使用gitbranch--set-upstreambranch-nameorigin/branch-name；
从远程抓取分支，使用gitpull，如果有冲突，要先处理冲突。
在GitHub上，可以任意Fork开源仓库；
自己拥有Fork后的仓库的读写权限；
可以推送pullrequest给官方仓库来贡献代码。